name: Build & Release

# 1. Trigger only on tag pushes
on:
  push:
    tags:
      - '*'                     # Run this workflow for any Git tag :contentReference[oaicite:2]{index=2}

jobs:
  # 2. Linux build
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install Linux deps
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg fakeroot jq npm bash fuse

      - name: Download AppImage tool
        run: |
          curl -L -o appimagetool-x86_64.AppImage \
            https://github.com/AppImage/AppImageKit/releases/latest/download/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage

      - name: Build and post-process
        run: |
          chmod +x build.sh
          ./build.sh

      - name: Upload Linux artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux-dist
          path: dist/*

  # 3. Windows build
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Build Windows package
        run: |
          npm run build -- --win nsis  # uses builder.yml to emit emulsion_x64.exe

      - name: Upload Windows artifacts
        uses: actions/upload-artifact@v3
        with:
          name: windows-dist
          path: dist/*

  # 4. Release creation and asset upload
  release:
    needs: [build_linux, build_windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifacts
        uses: actions/download-artifact@v3
        with:
          name: linux-dist
          path: dist

      - name: Download Windows artifacts
        uses: actions/download-artifact@v3
        with:
          name: windows-dist
          path: dist

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Emulsion ${{ github.ref_name }}
          draft: false
          prerelease: false                       # published full release :contentReference[oaicite:3]{index=3}

      - name: Upload emulsion_x64.exe
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/emulsion_x64.exe
          asset_name: emulsion_x64.exe
          asset_content_type: application/octet-stream :contentReference[oaicite:4]{index=4}

      - name: Upload emulsion_x86_64.AppImage
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/emulsion_x86_64.AppImage
          asset_name: emulsion_x86_64.AppImage
          asset_content_type: application/octet-stream :contentReference[oaicite:5]{index=5}

      - name: Upload emulsion_amd64.deb
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/emulsion_amd64.deb
          asset_name: emulsion_amd64.deb
          asset_content_type: application/octet-stream
