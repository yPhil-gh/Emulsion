body {
  margin: 0;
  padding: 0;
  background: #111;
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100vh;
  font-family: sans-serif;
  overflow: hidden;
  position: relative;
}

#slideshow {
  position: relative;
  width: 512px;
  height: 512px;
  overflow: visible;
}
/* Slide Styles */
.slide {
  position: absolute;
  top: 0;
  left: 0;
  width: 512px;
  height: 512px;
  background-size: cover;
  background-position: center;
  border-radius: 24px; /* More rounded corners */
  border: 2px solid rgba(0, 123, 255, 0.3); /* Subtle border */
  opacity: 0.5;
  transition: transform 0.5s ease, opacity 0.5s ease, box-shadow 0.5s ease, background-color 0.5s ease, border-color 0.5s ease;
  cursor: pointer;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1); /* Subtle shadow */
}

div:focus {
  outline: none;
}

#imageDialog:focus {
  outline: none;
}

.slide.active {
  opacity: 1; /* Fully visible */
outline: none;  transform: translateX(0) scale(1);
  z-index: 2;
  pointer-events: auto;
  background-color: rgba(34, 34, 34, 0.9); /* Darker background */
  border-color: #007bff; /* Bright blue border */
  box-shadow: 0 8px 24px rgba(0, 123, 255, 0.4); /* Glowing shadow */
}

.slide.adjacent.active-left {
  transform: translateX(-200px) scale(0.9);
  z-index: 1;
  opacity: 0.7; /* Slightly more visible */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

.slide.adjacent.active-right {
  transform: translateX(200px) scale(0.9);
  z-index: 1;
  opacity: 0.7; /* Slightly more visible */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2); /* Subtle shadow */
}

/* Hover Effect */
.slide:hover {
  opacity: 0.8;
  border-color: rgba(0, 123, 255, 0.7); /* Brighter border on hover */
  box-shadow: 0 8px 24px rgba(0, 123, 255, 0.3); /* Glowing shadow on hover */
}

/* Platform Form Styles */
/* Platform Form Styles */
.platform-form {
  position: absolute;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(0, 0, 0, 0.9); /* Dark background */
  padding: 20px;
  border-radius: 16px; /* Rounded corners */
  color: white;
  text-align: center;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3); /* Subtle shadow */
  backdrop-filter: blur(8px); /* Frosted glass effect */
  border: 1px solid rgba(255, 255, 255, 0.1); /* Subtle border */
  width: 100%;
  max-width: 400px; /* Adjust as needed */
}

.form-group {
  display: flex;
  flex-direction: column;
  margin-bottom: 15px;
}

.form-group label {
  margin-bottom: 5px;
  font-size: 14px;
  color: rgba(255, 255, 255, 0.8); /* Light text */
}

.input-group {
  display: flex;
  gap: 10px; /* Space between inputs and buttons */
}

.input-group input {
  flex: 1;
  padding: 10px;
  border: 1px solid rgba(255, 255, 255, 0.2); /* Subtle border */
  border-radius: 8px; /* Rounded corners */
  background: rgba(255, 255, 255, 0.1); /* Semi-transparent background */
  color: white;
  font-size: 14px;
  transition: border-color 0.3s ease, background 0.3s ease;
}

.input-group input:focus {
  border-color: #007bff; /* Bright blue border on focus */
  background: rgba(255, 255, 255, 0.2); /* Slightly lighter background */
  outline: none; /* Remove default outline */
}

input.emulator-args {
  max-width: 22px;
}

.input-group button {
  padding: 10px 20px;
  border: none;
  border-radius: 8px; /* Rounded corners */
  background: #007bff; /* Bright blue background */
  color: white;
  font-size: 14px;
  cursor: pointer;
  transition: background 0.3s ease, transform 0.3s ease;
}

.input-group button:hover {
  background: #005bb5; /* Darker blue on hover */
  transform: translateY(-2px); /* Slight lift */
}

.input-group button:active {
  transform: translateY(0); /* Reset lift on click */
}

.save-button {
  width: 100%;
  padding: 10px 20px;
  border: none;
  border-radius: 8px; /* Rounded corners */
  background: #007bff; /* Bright blue background */
  color: white;
  font-size: 14px;
  cursor: pointer;
  transition: background 0.3s ease, transform 0.3s ease;
}

.save-button:hover {
  background: #005bb5; /* Darker blue on hover */
  transform: translateY(-2px); /* Slight lift */
}

.save-button:active {
  transform: translateY(0); /* Reset lift on click */
}

/* GALLERY */
/* Gallery Container */
.gallery {
  display: grid;
  grid-template-columns: repeat(6, 1fr); /* Default to 8 columns */
  gap: 10px;
  padding: 10px;
  width: 100%;
  max-width: 98%; /* Adjust as needed */
  margin: 0 auto;
}

/* Game Container */
.game-container {
  position: relative;
  /* width: 100%; /\* Take up full width of the grid cell *\/ */
  /* height: 100%; /\* Fixed height *\/ */
  min-width: 150px; /* Minimum width */
  /* min-height: 150px; */
  /* max-width: 250px; /\* Maximum width *\/ */
  /* max-height: 250px; /\* Maximum height *\/ */
  border-radius: 16px;
  overflow: hidden;
  border: 2px solid transparent;
  transition: border-color 0.2s ease, transform 0.2s ease;
  cursor: pointer;
}

.game-container.selected {
  border-color: #007bff; /* Blue outline for selected game */
  transform: scale(1.05);
}

/* Game Image */
.game-container img {
  width: 100%;
  height: 100%;
  object-fit: cover; /* Ensure the image covers the container */
  border-radius: 16px;
}

.game-container p {
  margin-top: 8px;
  font-size: 14px;
  text-align: center;
  color: #d5daeb;
}

/* .game-container p { */
/*   display:none; */
/* } */

/* Fetch Cover Button */
.fetch-cover-button {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: #007bff;
  color: white;
  border: none;
  cursor: pointer;
  opacity: 0;
  transition: opacity 0.3s ease;
  display: flex;
  justify-content: center;
  align-items: center;
}

.fetch-cover-button::before {
  content: '+';
  font-size: 24px;
  font-weight: bold;
}

.game-container:hover .fetch-cover-button {
  opacity: 1;
}

/* Rotation animation */
@keyframes rotate {
  from {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  to {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

/* Class to apply the rotation animation */
.rotate {
  animation: rotate 1s linear infinite;
}

dialog {
  width: 80%;
  max-width: 800px;
  border: none;
  border-radius: 10px;
  padding: 20px;
  background-color: #353c3f;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

dialog h2 {
  color: #fff;
}

dialog::backdrop {
  background-color: rgba(0, 0, 0, 0.5);
}

.image-grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
  gap: 10px;
  margin-top: 20px;
}

.image-container {
  /* cursor: pointer; */
  /* border: 2px solid #ddd; */
  /* border-radius: 5px; */
  /* overflow: hidden; */
  transition: border-color 0.3s ease;
}

.image-container.selected {
  border-color: #007bff;
}

.image-container img {
  width: 100%;
  height: auto;
  display: block;
}

.dialog-buttons {
  margin-top: 20px;
  display: flex;
  justify-content: flex-end;
  gap: 10px;
}

.button {
  padding: 10px 20px;
  background-color: #007bff;
  color: #fff;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.button:hover {
  background-color: #0056b3;
}

.bar {
  position: fixed;
  bottom: 0;
  right: 0;
  display: flex;
  flex-direction: row;
  gap: 10px;
  background: #222;
  padding: 10px;
  border-radius: 8px 0 0 0;
  /* Initially hidden off-screen. Default: slide up (translateY) */
  transform: translateY(100%);
  transition: transform 0.5s ease-in-out;
  z-index: 1000;
  color: green;
}

/* Style for each status item (icon and label) */
.status-item {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 5px;
  font-size: 14px;
}

/* Optionally style the icons (assuming they are small images) */
.status-item img {
  width: 30px;
  height: 30px;
}

/* When sliding from the right (if using "left" direction), we might override transform */
.bar.slide-left {
  transform: translateX(100%);
  transition: transform 0.5s ease-in-out;
}
